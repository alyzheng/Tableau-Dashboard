<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0624.2136                               -->
<workbook original-version='18.1' source-build='2022.2.0 (20222.22.0624.2136)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='city_temperature ' inline='true' name='federated.0vsicq60joffwf1ghry431gsczib' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='city_temperature' name='textscan.0jo9yiy0x4ud301e3v3250usuejo'>
            <connection class='textscan' directory='C:/Users/89797/Desktop' filename='city_temperature.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0jo9yiy0x4ud301e3v3250usuejo' name='city_temperature.csv' table='[city_temperature#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
            <column datatype='string' name='Region' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='integer' name='Month' ordinal='4' />
            <column datatype='integer' name='Day' ordinal='5' />
            <column datatype='integer' name='Year' ordinal='6' />
            <column datatype='real' name='AvgTemperature' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0jo9yiy0x4ud301e3v3250usuejo' name='city_temperature.csv' table='[city_temperature#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
            <column datatype='string' name='Region' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='integer' name='Month' ordinal='4' />
            <column datatype='integer' name='Day' ordinal='5' />
            <column datatype='integer' name='Year' ordinal='6' />
            <column datatype='real' name='AvgTemperature' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[city_temperature.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â¥&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[city_temperature.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_temperature.csv_94AB3889C8C545D58C37F88381A62CCD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[city_temperature.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_temperature.csv_94AB3889C8C545D58C37F88381A62CCD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[city_temperature.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_temperature.csv_94AB3889C8C545D58C37F88381A62CCD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[city_temperature.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_temperature.csv_94AB3889C8C545D58C37F88381A62CCD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[city_temperature.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_temperature.csv_94AB3889C8C545D58C37F88381A62CCD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Day]</local-name>
            <parent-name>[city_temperature.csv]</parent-name>
            <remote-alias>Day</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_temperature.csv_94AB3889C8C545D58C37F88381A62CCD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[city_temperature.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_temperature.csv_94AB3889C8C545D58C37F88381A62CCD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AvgTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AvgTemperature]</local-name>
            <parent-name>[city_temperature.csv]</parent-name>
            <remote-alias>AvgTemperature</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_temperature.csv_94AB3889C8C545D58C37F88381A62CCD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Temperature' datatype='real' name='[AvgTemperature]' role='measure' type='quantitative' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Day]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='city_temperature.csv' datatype='table' name='[__tableau_internal_object_id__].[city_temperature.csv_94AB3889C8C545D58C37F88381A62CCD]' role='measure' type='quantitative' />
      <group caption='Top 10 Country with highest average temperature' name='[Top 10 Country with highest average temperature]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([AvgTemperature])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
          <field>[Top 10 Country with highest average temperature]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='city_temperature.csv' id='city_temperature.csv_94AB3889C8C545D58C37F88381A62CCD'>
            <properties context=''>
              <relation connection='textscan.0jo9yiy0x4ud301e3v3250usuejo' name='city_temperature.csv' table='[city_temperature#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                  <column datatype='string' name='Region' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='integer' name='Month' ordinal='4' />
                  <column datatype='integer' name='Day' ordinal='5' />
                  <column datatype='integer' name='Year' ordinal='6' />
                  <column datatype='real' name='AvgTemperature' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='city_temperature' inline='true' name='federated.1liupmt1ak0cqo1eu5s7x1qpztd3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='city_temperature' name='textscan.13fx7t91k8u0vp18lj9my1pdi61z'>
            <connection class='textscan' directory='C:/Users/89797/Desktop' filename='city_temperature.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.13fx7t91k8u0vp18lj9my1pdi61z' name='city_temperature.csv' table='[city_temperature#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
            <column datatype='string' name='Region' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='integer' name='Month' ordinal='4' />
            <column datatype='integer' name='Day' ordinal='5' />
            <column datatype='integer' name='Year' ordinal='6' />
            <column datatype='real' name='AvgTemperature' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.13fx7t91k8u0vp18lj9my1pdi61z' name='city_temperature.csv' table='[city_temperature#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
            <column datatype='string' name='Region' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='integer' name='Month' ordinal='4' />
            <column datatype='integer' name='Day' ordinal='5' />
            <column datatype='integer' name='Year' ordinal='6' />
            <column datatype='real' name='AvgTemperature' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[city_temperature.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â¥&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[city_temperature.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_temperature.csv_A24B482A912F47DBB71A7414264D82DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[city_temperature.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_temperature.csv_A24B482A912F47DBB71A7414264D82DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[city_temperature.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_temperature.csv_A24B482A912F47DBB71A7414264D82DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[city_temperature.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_temperature.csv_A24B482A912F47DBB71A7414264D82DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[city_temperature.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_temperature.csv_A24B482A912F47DBB71A7414264D82DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Day]</local-name>
            <parent-name>[city_temperature.csv]</parent-name>
            <remote-alias>Day</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_temperature.csv_A24B482A912F47DBB71A7414264D82DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[city_temperature.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_temperature.csv_A24B482A912F47DBB71A7414264D82DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AvgTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AvgTemperature]</local-name>
            <parent-name>[city_temperature.csv]</parent-name>
            <remote-alias>AvgTemperature</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_temperature.csv_A24B482A912F47DBB71A7414264D82DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Temperature' datatype='real' name='[AvgTemperature]' role='measure' type='quantitative' />
      <column caption='Is Temperature High?' datatype='string' name='[Calculation_607423017121808384]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [AvgTemperature] &gt;= 80 THEN &quot;Yes&quot;&#13;&#10;ELSE &quot;No&quot; END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Day]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='city_temperature.csv' datatype='table' name='[__tableau_internal_object_id__].[city_temperature.csv_A24B482A912F47DBB71A7414264D82DC]' role='measure' type='quantitative' />
      <column-instance column='[AvgTemperature]' derivation='Avg' name='[avg:AvgTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_607423017121808384]' derivation='None' name='[none:Calculation_607423017121808384:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[AvgTemperature]' derivation='Sum' name='[sum:AvgTemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AvgTemperature]' derivation='Avg' name='[win:avg:AvgTemperature:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <group caption='Country Set(Last)' name='[Country Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([AvgTemperature])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Country Set(Top)' name='[Country Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([AvgTemperature])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Asia' name='[Region Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='member' level='[Region]' member='&quot;Asia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group caption='Australia' name='[Region Set 2]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='member' level='[Region]' member='&quot;Australia/South Pacific&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group caption='Europe' name='[Region Set 3]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='member' level='[Region]' member='&quot;Europe&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group caption='Middle East' name='[Region Set 4]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='member' level='[Region]' member='&quot;Middle East&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group caption='Region' name='[Region Set 5]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='member' level='[Region]' member='%null%' />
        </groupfilter>
      </group>
      <group caption='Africa' name='[Region Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='member' level='[Region]' member='&quot;Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[win:avg:AvgTemperature:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[sum:AvgTemperature:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1liupmt1ak0cqo1eu5s7x1qpztd3]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_607423017121808384:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;No&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' palette='tableau-20' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Middle East&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='city_temperature.csv' id='city_temperature.csv_A24B482A912F47DBB71A7414264D82DC'>
            <properties context=''>
              <relation connection='textscan.13fx7t91k8u0vp18lj9my1pdi61z' name='city_temperature.csv' table='[city_temperature#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                  <column datatype='string' name='Region' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='integer' name='Month' ordinal='4' />
                  <column datatype='integer' name='Day' ordinal='5' />
                  <column datatype='integer' name='Year' ordinal='6' />
                  <column datatype='real' name='AvgTemperature' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Avg Temperature by Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_temperature' name='federated.1liupmt1ak0cqo1eu5s7x1qpztd3' />
          </datasources>
          <datasource-dependencies datasource='federated.1liupmt1ak0cqo1eu5s7x1qpztd3'>
            <column caption='Avg Temperature' datatype='real' name='[AvgTemperature]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[AvgTemperature]' derivation='Avg' name='[avg:AvgTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AvgTemperature]' derivation='Avg' name='[win:avg:AvgTemperature:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' value='100' />
            <format attr='title' class='0' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[win:avg:AvgTemperature:qk]' scope='rows' value=' Avg Temperature' />
            <format attr='width' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[win:avg:AvgTemperature:qk]' value='100' />
            <encoding attr='space' class='0' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Year:qk]' field-type='quantitative' max='2023' min='1993' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[win:avg:AvgTemperature:qk]' field-type='quantitative' max='68.288529011197213' min='-0.55384288836900075' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='rows' value='#efebe8' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' palette='blue_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[win:avg:AvgTemperature:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#efebe8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#efebe8' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[win:avg:AvgTemperature:qk]</rows>
        <cols>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Year:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[win:avg:AvgTemperature:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]</field>
                  <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Year:qk]</field>
                  <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[win:avg:AvgTemperature:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>64.070941498604583</value>
                <value>2014</value>
                <value>63.629578998627643</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{89E1765F-55C4-4680-B208-421965AFABE7}' />
    </worksheet>
    <worksheet name='Last 5 Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>Last 5 Countries by Average Temperature</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_temperature' name='federated.1liupmt1ak0cqo1eu5s7x1qpztd3' />
          </datasources>
          <datasource-dependencies datasource='federated.1liupmt1ak0cqo1eu5s7x1qpztd3'>
            <column caption='Avg Temperature' datatype='real' name='[AvgTemperature]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[AvgTemperature]' derivation='Avg' name='[avg:AvgTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[Country Set 1]' />
          <manual-sort column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Myanmar (Burma)&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[Country Set 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' scope='cols' value='Average of Avg Temperature' />
            <encoding attr='space' class='0' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' field-type='quantitative' max='94.396432657586146' min='14.12465536923969' range-type='fixed' scope='cols' type='space' />
            <format attr='height' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' value='80' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Country:nk]' value='27' />
            <format attr='text-format' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Country:nk]' value='168' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#efebe8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#efebe8' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]' />
              <text column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' z-order='1' />
            <reference-line axis-column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' z-order='2' />
            <reference-line axis-column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' z-order='3' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Country:nk]</rows>
        <cols>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]</cols>
      </table>
      <simple-id uuid='{43AD2955-6976-44EB-BAF6-4DE0C4E34A27}' />
    </worksheet>
    <worksheet name='Max Average Tem'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_temperature' name='federated.1liupmt1ak0cqo1eu5s7x1qpztd3' />
          </datasources>
          <datasource-dependencies datasource='federated.1liupmt1ak0cqo1eu5s7x1qpztd3'>
            <column caption='Avg Temperature' datatype='real' name='[AvgTemperature]' role='measure' type='quantitative' />
            <column caption='Is Temperature High?' datatype='string' name='[Calculation_607423017121808384]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [AvgTemperature] &gt;= 80 THEN &quot;Yes&quot;&#13;&#10;ELSE &quot;No&quot; END' />
            </column>
            <column-instance column='[AvgTemperature]' derivation='Max' name='[max:AvgTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_607423017121808384]' derivation='None' name='[none:Calculation_607423017121808384:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Calculation_607423017121808384:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_607423017121808384:nk]' />
              <groupfilter function='member' level='[none:Calculation_607423017121808384:nk]' member='&quot;No&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Calculation_607423017121808384:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#efebe8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Calculation_607423017121808384:nk]' />
              <text column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[max:AvgTemperature:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold' fontsize='20'><![CDATA[<[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[max:AvgTemperature:qk]>]]></run>
                <run>Ã&#10;</run>
                <run fontname='Tableau Bold' fontsize='10'>Maximum Average Temperature</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='wrap' value='off' />
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F96169B8-2BCB-41E5-BF17-6A8FE0B2444D}' />
    </worksheet>
    <worksheet name='Min Average Tem'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_temperature' name='federated.1liupmt1ak0cqo1eu5s7x1qpztd3' />
          </datasources>
          <datasource-dependencies datasource='federated.1liupmt1ak0cqo1eu5s7x1qpztd3'>
            <column caption='Avg Temperature' datatype='real' name='[AvgTemperature]' role='measure' type='quantitative' />
            <column caption='Is Temperature High?' datatype='string' name='[Calculation_607423017121808384]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [AvgTemperature] &gt;= 80 THEN &quot;Yes&quot;&#13;&#10;ELSE &quot;No&quot; END' />
            </column>
            <column-instance column='[AvgTemperature]' derivation='Min' name='[min:AvgTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_607423017121808384]' derivation='None' name='[none:Calculation_607423017121808384:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Calculation_607423017121808384:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_607423017121808384:nk]' />
              <groupfilter function='member' level='[none:Calculation_607423017121808384:nk]' member='&quot;Yes&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Calculation_607423017121808384:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#efebe8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Calculation_607423017121808384:nk]' />
              <text column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[min:AvgTemperature:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold' fontsize='20'><![CDATA[<[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[min:AvgTemperature:qk]>]]></run>
                <run>Ã&#10;</run>
                <run fontname='Tableau Bold' fontsize='10'>Minimum Average Temperature</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='off' />
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DC6875EF-1358-4690-B778-845E4F16B193}' />
    </worksheet>
    <worksheet name='Temperature by Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>Avg Temperature by Region</run>
            <run fontalignment='1'>Ã&#10;</run>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='12'>(The darker the dot, the hotter a country is )</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_temperature' name='federated.1liupmt1ak0cqo1eu5s7x1qpztd3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1liupmt1ak0cqo1eu5s7x1qpztd3'>
            <column caption='Avg Temperature' datatype='real' name='[AvgTemperature]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[AvgTemperature]' derivation='Avg' name='[avg:AvgTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[Longitude (generated)]' field-type='quantitative' max='30601216.30151473' min='-9316904.719760498' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[Latitude (generated)]' field-type='quantitative' max='13751815.048157655' min='-12599663.482055647' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='rows' value='#efebe8' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#efebe8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#efebe8' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#666666' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='Coastline' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' />
              <lod column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Country:nk]' />
              <geometry column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[Latitude (generated)]</rows>
        <cols>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1A0091D7-4B4F-4D95-8D0A-A3454BF903A0}' />
    </worksheet>
    <worksheet name='Top 5 Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>Top 5 Countries by Average Temperature</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_temperature' name='federated.1liupmt1ak0cqo1eu5s7x1qpztd3' />
          </datasources>
          <datasource-dependencies datasource='federated.1liupmt1ak0cqo1eu5s7x1qpztd3'>
            <column caption='Avg Temperature' datatype='real' name='[AvgTemperature]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[AvgTemperature]' derivation='Avg' name='[avg:AvgTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[Country Set]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[Country Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' scope='cols' value='Average of Avg Temperature' />
            <encoding attr='space' class='0' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' field-type='quantitative' max='94.396432657586146' min='14.12465536923969' range-type='fixed' scope='cols' type='space' />
            <format attr='height' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' value='64' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Country:nk]' value='26' />
            <format attr='text-format' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Country:nk]' value='156' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#efebe8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#efebe8' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]' />
              <text column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Country:nk]</rows>
        <cols>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]</cols>
      </table>
      <simple-id uuid='{EC15F899-A5F5-4CA2-8C60-843CA85FABF1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard '>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#efebe8' />
        </style-rule>
      </style>
      <size maxheight='1000' maxwidth='1600' minheight='1000' minwidth='1600' sizing-mode='fixed' />
      <datasources>
        <datasource caption='city_temperature' name='federated.1liupmt1ak0cqo1eu5s7x1qpztd3' />
      </datasources>
      <datasource-dependencies datasource='federated.1liupmt1ak0cqo1eu5s7x1qpztd3'>
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='67' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='57' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='12700' id='55' param='horz' type-v2='layout-flow' w='75000' x='25000' y='0'>
                <zone fixed-size='990' h='12700' id='11' is-fixed='true' param='horz' type-v2='layout-flow' w='75000' x='25000' y='0'>
                  <zone h='12700' id='9' type-v2='layout-basic' w='75000' x='25000' y='0'>
                    <zone h='12700' id='5' param='horz' type-v2='layout-flow' w='75000' x='25000' y='0'>
                      <zone h='12700' id='7' param='horz' type-v2='layout-flow' w='75000' x='25000' y='0'>
                        <zone forceUpdate='true' h='11900' id='1' type-v2='text' w='53562' x='25250' y='400'>
                          <formatted-text>
                            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>Average Temperature Tracker by Region</run>
                            <run fontalignment='1'>Ã&#10;</run>
                            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>Done by: Jingwen Zheng</run>
                          </formatted-text>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone fixed-size='327' h='11900' id='4' is-fixed='true' name='Min Average Tem' w='20938' x='78812' y='400'>
                          <layout-cache type-h='fixed' type-w='fixed' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='67100' id='56' name='Temperature by Region' w='54813' x='0' y='12700'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30700' id='62' name='Top 5 Countries' w='45187' x='54813' y='12700'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='2900' id='63' name='Top 5 Countries' pane-specification-id='0' param='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]' type-v2='color' w='45187' x='54813' y='75000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='20200' id='60' mode='radiolist' name='Temperature by Region' param='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]' type-v2='filter' w='54813' x='0' y='79800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='31600' id='64' name='Last 5 Countries' w='45187' x='54813' y='43400'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22100' id='65' name='Avg Temperature by Year' w='34075' x='54813' y='77900'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22100' id='68' mode='radiolist' name='Avg Temperature by Year' param='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]' type-v2='filter' w='11112' x='88888' y='77900'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='343' h='12700' id='3' is-fixed='true' name='Max Average Tem' w='25000' x='0' y='0'>
                <layout-cache type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='84' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98400' id='83' param='vert' type-v2='layout-flow' w='99000' x='500' y='800'>
                <zone fixed-size='119' h='12700' id='3' is-fixed='true' name='Max Average Tem' w='25000' x='0' y='0'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='11900' id='1' type-v2='text' w='53562' x='25250' y='400'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>Average Temperature Tracker by Region</run>
                    <run fontalignment='1'>Ã&#10;</run>
                    <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>Done by: Jingwen Zheng</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='111' h='11900' id='4' is-fixed='true' name='Min Average Tem' w='20938' x='78812' y='400'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20200' id='60' mode='dropdown' name='Temperature by Region' param='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]' type-v2='filter' w='54813' x='0' y='79800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='67100' id='56' is-fixed='true' name='Temperature by Region' w='54813' x='0' y='12700'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='30700' id='62' is-fixed='true' name='Top 5 Countries' w='45187' x='54813' y='12700'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2900' id='63' name='Top 5 Countries' pane-specification-id='0' param='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]' type-v2='color' w='45187' x='54813' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='31600' id='64' is-fixed='true' name='Last 5 Countries' w='45187' x='54813' y='43400'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22100' id='68' mode='dropdown' name='Avg Temperature by Year' param='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]' type-v2='filter' w='11112' x='88888' y='77900'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='213' h='22100' id='65' is-fixed='true' name='Avg Temperature by Year' w='34075' x='54813' y='77900'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1EFA5BBF-9092-43F9-AAC9-35E4497942D4}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='dashboard' maximized='true' name='Dashboard '>
      <viewpoints>
        <viewpoint name='Avg Temperature by Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Last 5 Countries' />
        <viewpoint name='Max Average Tem'>
          <highlight field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Calculation_607423017121808384:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Min Average Tem'>
          <highlight field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Calculation_607423017121808384:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Temperature by Region'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 Countries'>
          <highlight field='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='68' />
      <simple-id uuid='{5241B939-15FD-4E07-A270-75241BE2595A}' />
    </window>
    <window class='worksheet' name='Top 5 Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vsicq60joffwf1ghry431gsczib].[Top 10 Country with highest average temperature]</field>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[Country Set]</field>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[Top 10 Countries with the highest average temperature]</field>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC1CC736-6B62-4F33-A0F1-5E711F123E68}' />
    </window>
    <window class='worksheet' name='Last 5 Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0vsicq60joffwf1ghry431gsczib].[Top 10 Country with highest average temperature]</field>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[Country Set 1]</field>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[Country Set]</field>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[Top 10 Countries with the highest average temperature]</field>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Country:nk]</field>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{42F5D086-0753-4A6F-878D-6E065DC37079}' />
    </window>
    <window class='worksheet' name='Temperature by Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[Country Set]</field>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[Region Set 3]</field>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[Region Set 4]</field>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]</field>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D9A56CA7-7FA6-4727-B870-BE73DAEBECD3}' />
    </window>
    <window class='worksheet' name='Max Average Tem'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Calculation_607423017121808384:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Calculation_607423017121808384:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8937860F-86BD-4601-9673-CEC67BEDC6D2}' />
    </window>
    <window class='worksheet' name='Min Average Tem'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Calculation_607423017121808384:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Calculation_607423017121808384:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{475ACF6E-BC72-417B-8D75-37474E5E9FF4}' />
    </window>
    <window class='worksheet' name='Avg Temperature by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[avg:AvgTemperature:qk]</field>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[io:Region Set 5:nk]</field>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Month:qk]</field>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Region:nk]</field>
            <field>[federated.1liupmt1ak0cqo1eu5s7x1qpztd3].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{55D1CD15-AFC9-43E4-B0AF-C3A8299C9995}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg Temperature by Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard ' width='192'>
      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
      A5oN+v8BS5//SoR8KxIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Last 5 Countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='85' name='Max Average Tem' width='192'>
      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
    </thumbnail>
    <thumbnail height='85' name='Min Average Tem' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Temperature by Region' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 5 Countries' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
